package ModPerl::FunctionTable;

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ! WARNING: generated by ModPerl::ParseSource/0.01
# !          Sat May  5 10:26:55 2001
# !          do NOT edit, any changes will be lost !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

$ModPerl::FunctionTable = [
  {
    'return_type' => 'U32',
    'args' => [
      {
        'name' => 'str',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_flags_lookup_dir'
  },
  {
    'return_type' => 'U32',
    'args' => [
      {
        'name' => 'str',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_flags_lookup_srv'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      }
    ],
    'name' => 'modperl_pre_connection_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      }
    ],
    'name' => 'modperl_process_connection_handler'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_child_init_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_header_parser_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_access_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_authen_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_authz_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_type_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_fixup_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_log_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_post_read_request_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_trans_handler'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_open_logs_handler'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_post_config_handler'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_register_handler_hooks'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_handler_desc_connection'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_handler_desc_process'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_handler_desc_files'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_handler_desc_per_srv'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_handler_desc_per_dir'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'type',
        'type' => 'int *'
      }
    ],
    'name' => 'modperl_handler_lookup'
  },
  {
    'return_type' => 'server_rec *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_sv2server_rec'
  },
  {
    'return_type' => 'request_rec *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_sv2request_rec'
  },
  {
    'return_type' => 'request_rec *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'classname',
        'type' => 'char *'
      },
      {
        'name' => 'cv',
        'type' => 'CV *'
      }
    ],
    'name' => 'modperl_xs_sv2request_rec'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'stashsv',
        'type' => 'SV *'
      },
      {
        'name' => 'obj',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_newSVsv_obj'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'classname',
        'type' => 'char *'
      },
      {
        'name' => 'ptr',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_ptr2obj'
  },
  {
    'return_type' => 'apr_pool_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'obj',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_sv2pool'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'rv',
        'type' => 'apr_status_t'
      }
    ],
    'name' => 'modperl_apr_strerror'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'status',
        'type' => 'int'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_errsv'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'pv',
        'type' => 'const char *'
      },
      {
        'name' => 'logfailure',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_require_module'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_server_desc'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      }
    ],
    'name' => 'modperl_xs_dl_handles_clear'
  },
  {
    'return_type' => 'apr_array_header_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_xs_dl_handles_get'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'handles',
        'type' => 'apr_array_header_t *'
      }
    ],
    'name' => 'modperl_xs_dl_handles_close'
  },
  {
    'return_type' => 'modperl_cleanup_data_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_cleanup_data_new'
  },
  {
    'return_type' => 'void *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'dir',
        'type' => 'char *'
      }
    ],
    'name' => 'modperl_config_dir_create'
  },
  {
    'return_type' => 'void *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'basev',
        'type' => 'void *'
      },
      {
        'name' => 'addv',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_config_dir_merge'
  },
  {
    'return_type' => 'modperl_config_srv_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_config_srv_new'
  },
  {
    'return_type' => 'modperl_config_dir_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_config_dir_new'
  },
  {
    'return_type' => 'modperl_config_req_t *',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_config_req_new'
  },
  {
    'return_type' => 'void *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_config_srv_create'
  },
  {
    'return_type' => 'void *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'basev',
        'type' => 'void *'
      },
      {
        'name' => 'addv',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_config_srv_merge'
  },
  {
    'return_type' => 'char **',
    'args' => [
      {
        'name' => 'scfg',
        'type' => 'modperl_config_srv_t *'
      },
      {
        'name' => 'argc',
        'type' => 'int *'
      }
    ],
    'name' => 'modperl_config_srv_argv_init'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'handlers',
        'type' => 'MpAV **'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_cmd_push_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_trace'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_switches'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_options'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_start'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_max'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_max_spare'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_min_spare'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_max_requests'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_interp_scope'
  },
  {
    'return_type' => 'modperl_handler_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_handler_new'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'handp',
        'type' => 'modperl_handler_t **'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_handler_resolve'
  },
  {
    'return_type' => 'modperl_handler_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'h',
        'type' => 'modperl_handler_t *'
      }
    ],
    'name' => 'modperl_handler_dup'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'h1',
        'type' => 'modperl_handler_t *'
      },
      {
        'name' => 'h2',
        'type' => 'modperl_handler_t *'
      }
    ],
    'name' => 'modperl_handler_equal'
  },
  {
    'return_type' => 'MpAV *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'base_a',
        'type' => 'MpAV *'
      },
      {
        'name' => 'add_a',
        'type' => 'MpAV *'
      }
    ],
    'name' => 'modperl_handler_array_merge'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'avp',
        'type' => 'AV **'
      },
      {
        'name' => 'arg2',
        'type' => '...'
      }
    ],
    'name' => 'modperl_handler_make_args'
  },
  {
    'return_type' => 'MpAV **',
    'args' => [
      {
        'name' => 'dcfg',
        'type' => 'modperl_config_dir_t *'
      },
      {
        'name' => 'scfg',
        'type' => 'modperl_config_srv_t *'
      },
      {
        'name' => 'rcfg',
        'type' => 'modperl_config_req_t *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'type',
        'type' => 'int'
      },
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'action',
        'type' => 'modperl_handler_action_e'
      },
      {
        'name' => 'desc',
        'type' => 'const char **'
      }
    ],
    'name' => 'modperl_handler_lookup_handlers'
  },
  {
    'return_type' => 'MpAV **',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'action',
        'type' => 'modperl_handler_action_e'
      }
    ],
    'name' => 'modperl_handler_get_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'handlers',
        'type' => 'MpAV *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_handler_push_handlers'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'handp',
        'type' => 'MpAV **'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_handler_perl_get_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'action',
        'type' => 'modperl_handler_action_e'
      }
    ],
    'name' => 'modperl_handler_perl_add_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'handler',
        'type' => 'modperl_handler_t *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'args',
        'type' => 'AV *'
      }
    ],
    'name' => 'modperl_callback'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'type',
        'type' => 'int'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_callback_run_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_callback_per_dir'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_callback_per_srv'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      }
    ],
    'name' => 'modperl_callback_connection'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_callback_process'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'idx',
        'type' => 'int'
      },
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_callback_files'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_list_new'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_list_last'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_list_first'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      },
      {
        'name' => 'new_list',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_list_append'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      },
      {
        'name' => 'new_list',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_list_prepend'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      },
      {
        'name' => 'rlist',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_list_remove'
  },
  {
    'return_type' => 'modperl_tipool_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'cfg',
        'type' => 'modperl_tipool_config_t *'
      },
      {
        'name' => 'func',
        'type' => 'modperl_tipool_vtbl_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_tipool_new'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      }
    ],
    'name' => 'modperl_tipool_init'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      }
    ],
    'name' => 'modperl_tipool_destroy'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_tipool_add'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      },
      {
        'name' => 'listp',
        'type' => 'modperl_list_t *'
      }
    ],
    'name' => 'modperl_tipool_remove'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'list',
        'type' => 'modperl_list_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      },
      {
        'name' => 'listp',
        'type' => 'modperl_list_t **'
      }
    ],
    'name' => 'modperl_list_remove_data'
  },
  {
    'return_type' => 'modperl_list_t *',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      }
    ],
    'name' => 'modperl_tipool_pop'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      },
      {
        'name' => 'listp',
        'type' => 'modperl_list_t *'
      },
      {
        'name' => 'num_requests',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_tipool_putback'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'tipool',
        'type' => 'modperl_tipool_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      },
      {
        'name' => 'num_requests',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_tipool_putback_data'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'perl',
        'type' => 'PerlInterpreter *'
      }
    ],
    'name' => 'modperl_interp_init'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_interp_cleanup'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'scope',
        'type' => 'modperl_interp_scope_e'
      }
    ],
    'name' => 'modperl_interp_scope_desc'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'interp',
        'type' => 'modperl_interp_t *'
      }
    ],
    'name' => 'modperl_interp_clone_init'
  },
  {
    'return_type' => 'modperl_interp_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'mip',
        'type' => 'modperl_interp_pool_t *'
      },
      {
        'name' => 'perl',
        'type' => 'PerlInterpreter *'
      }
    ],
    'name' => 'modperl_interp_new'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'interp',
        'type' => 'modperl_interp_t *'
      }
    ],
    'name' => 'modperl_interp_destroy'
  },
  {
    'return_type' => 'modperl_interp_t *',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_interp_get'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_interp_unselect'
  },
  {
    'return_type' => 'modperl_interp_t *',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_interp_select'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_interp_pool_destroy'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'mip',
        'type' => 'modperl_interp_pool_t *'
      },
      {
        'name' => 'interp',
        'type' => 'modperl_interp_t *'
      }
    ],
    'name' => 'modperl_interp_pool_add'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'mip',
        'type' => 'modperl_interp_pool_t *'
      },
      {
        'name' => 'interp',
        'type' => 'modperl_interp_t *'
      }
    ],
    'name' => 'modperl_interp_pool_remove'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'func',
        'type' => 'char *'
      },
      {
        'name' => 'fmt',
        'type' => 'const char *'
      },
      {
        'name' => 'arg2',
        'type' => '...'
      }
    ],
    'name' => 'modperl_trace'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'level',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_trace_level_set'
  },
  {
    'return_type' => 'modperl_options_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'type',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_options_new'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'o',
        'type' => 'modperl_options_t *'
      },
      {
        'name' => 's',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_options_set'
  },
  {
    'return_type' => 'modperl_options_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'base',
        'type' => 'modperl_options_t *'
      },
      {
        'name' => 'arg2',
        'type' => 'modperl_options_t *new'
      }
    ],
    'name' => 'modperl_options_merge'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_pre_connection_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_process_connection_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_child_init_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_header_parser_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_access_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_authen_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_authz_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_type_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_fixup_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_response_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_log_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_input_filter_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_output_filter_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_post_read_request_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_trans_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_open_logs_handlers'
  },
  {
    'return_type' => 'const char *',
    'args' => [
      {
        'name' => 'parms',
        'type' => 'cmd_parms *'
      },
      {
        'name' => 'dummy',
        'type' => 'void *'
      },
      {
        'name' => 'arg',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_cmd_post_config_handlers'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'b',
        'type' => 'modperl_wbucket_t *'
      },
      {
        'name' => 'buf',
        'type' => 'const char *'
      },
      {
        'name' => 'len',
        'type' => 'apr_ssize_t'
      }
    ],
    'name' => 'modperl_wbucket_pass'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'b',
        'type' => 'modperl_wbucket_t *'
      }
    ],
    'name' => 'modperl_wbucket_flush'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'b',
        'type' => 'modperl_wbucket_t *'
      },
      {
        'name' => 'buf',
        'type' => 'const char *'
      },
      {
        'name' => 'wlen',
        'type' => 'apr_ssize_t *'
      }
    ],
    'name' => 'modperl_wbucket_write'
  },
  {
    'return_type' => 'modperl_filter_t *',
    'args' => [
      {
        'name' => 'f',
        'type' => 'ap_filter_t *'
      },
      {
        'name' => 'bb',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'mode',
        'type' => 'modperl_filter_mode_e'
      }
    ],
    'name' => 'modperl_filter_new'
  },
  {
    'return_type' => 'modperl_filter_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'obj',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_filter_mg_get'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'filter',
        'type' => 'modperl_filter_t *'
      },
      {
        'name' => 'mode',
        'type' => 'ap_input_mode_t'
      },
      {
        'name' => 'readbytes',
        'type' => 'apr_size_t'
      }
    ],
    'name' => 'modperl_run_filter'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'f',
        'type' => 'ap_filter_t *'
      },
      {
        'name' => 'bb',
        'type' => 'apr_bucket_brigade *'
      }
    ],
    'name' => 'modperl_output_filter_handler'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_output_filter_register'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'filter',
        'type' => 'modperl_filter_t *'
      }
    ],
    'name' => 'modperl_output_filter_flush'
  },
  {
    'return_type' => 'apr_ssize_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'filter',
        'type' => 'modperl_filter_t *'
      },
      {
        'name' => 'buffer',
        'type' => 'SV *'
      },
      {
        'name' => 'wanted',
        'type' => 'apr_ssize_t'
      }
    ],
    'name' => 'modperl_output_filter_read'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'filter',
        'type' => 'modperl_filter_t *'
      },
      {
        'name' => 'buf',
        'type' => 'const char *'
      },
      {
        'name' => 'len',
        'type' => 'apr_ssize_t *'
      }
    ],
    'name' => 'modperl_output_filter_write'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'bb',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'fp',
        'type' => 'FILE *'
      }
    ],
    'name' => 'modperl_brigade_dump'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'f',
        'type' => 'ap_filter_t *'
      },
      {
        'name' => 'bb',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'mode',
        'type' => 'ap_input_mode_t'
      },
      {
        'name' => 'readbytes',
        'type' => 'apr_size_t'
      }
    ],
    'name' => 'modperl_input_filter_handler'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      }
    ],
    'name' => 'modperl_input_filter_register_connection'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_input_filter_register_request'
  },
  {
    'return_type' => 'modperl_mgv_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_mgv_new'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'mgv1',
        'type' => 'modperl_mgv_t *'
      },
      {
        'name' => 'mgv2',
        'type' => 'modperl_mgv_t *'
      }
    ],
    'name' => 'modperl_mgv_equal'
  },
  {
    'return_type' => 'modperl_mgv_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_mgv_compile'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_mgv_name_from_sv'
  },
  {
    'return_type' => 'GV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'symbol',
        'type' => 'modperl_mgv_t *'
      }
    ],
    'name' => 'modperl_mgv_lookup'
  },
  {
    'return_type' => 'GV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'symbol',
        'type' => 'modperl_mgv_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_mgv_lookup_autoload'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'handler',
        'type' => 'modperl_handler_t *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_mgv_resolve'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'symbol',
        'type' => 'modperl_mgv_t *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_mgv_append'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'symbol',
        'type' => 'modperl_mgv_t *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'package',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_mgv_as_string'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'symbol',
        'type' => 'modperl_mgv_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_mgv_require_module'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_mgv_hash_handlers'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_global_request_cfg_set'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_global_request_set'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'svr',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_global_request_obj_set'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'global',
        'type' => 'modperl_global_t *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'modperl_global_init'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'global',
        'type' => 'modperl_global_t *'
      }
    ],
    'name' => 'modperl_global_lock'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'global',
        'type' => 'modperl_global_t *'
      }
    ],
    'name' => 'modperl_global_unlock'
  },
  {
    'return_type' => 'void *',
    'args' => [
      {
        'name' => 'global',
        'type' => 'modperl_global_t *'
      }
    ],
    'name' => 'modperl_global_get'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'global',
        'type' => 'modperl_global_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_global_set'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_global_init_pconf'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_lock_pconf'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_unlock_pconf'
  },
  {
    'return_type' => 'apr_pool_t *',
    'args' => [],
    'name' => 'modperl_global_get_pconf'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'arg0',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_global_set_pconf'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'arg1',
        'type' => 'server_rec * server_rec'
      }
    ],
    'name' => 'modperl_global_init_server_rec'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_lock_server_rec'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_unlock_server_rec'
  },
  {
    'return_type' => 'server_rec *',
    'args' => [],
    'name' => 'modperl_global_get_server_rec'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'arg0',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_global_set_server_rec'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'threaded_mpm',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_global_init_threaded_mpm'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_lock_threaded_mpm'
  },
  {
    'return_type' => 'void',
    'args' => [],
    'name' => 'modperl_global_unlock_threaded_mpm'
  },
  {
    'return_type' => 'int',
    'args' => [],
    'name' => 'modperl_global_get_threaded_mpm'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'arg0',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_global_set_threaded_mpm'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'key',
        'type' => 'modperl_tls_t **'
      }
    ],
    'name' => 'modperl_tls_create'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'key',
        'type' => 'modperl_tls_t *'
      },
      {
        'name' => 'data',
        'type' => 'void **'
      }
    ],
    'name' => 'modperl_tls_get'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'key',
        'type' => 'modperl_tls_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_tls_set'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'key',
        'type' => 'modperl_tls_t *'
      },
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_tls_reset_cleanup'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_tls_create_request_rec'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'request_rec * *'
      }
    ],
    'name' => 'modperl_tls_get_request_rec'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'modperl_tls_set_request_rec'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'data',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_tls_reset_cleanup_request_rec'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_init'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'pconf',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 's',
        'type' => 'server_rec *'
      }
    ],
    'name' => 'modperl_hook_init'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'plog',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ptemp',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_pre_config_handler'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_register_hooks'
  },
  {
    'return_type' => 'PerlInterpreter *',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'modperl_startup'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_response_init'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_response_finish'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'modperl_response_handler'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'offset',
        'type' => 'int'
      },
      {
        'name' => 'len',
        'type' => 'int'
      }
    ],
    'name' => 'modperl_bucket_sv_create'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'classname',
        'type' => 'SV *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'offset',
        'type' => 'int'
      },
      {
        'name' => 'len',
        'type' => 'int'
      }
    ],
    'name' => 'mpxs_APR__Bucket_new'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      },
      {
        'name' => 'str',
        'type' => 'const char **'
      },
      {
        'name' => 'len',
        'type' => 'apr_size_t *'
      },
      {
        'name' => 'block',
        'type' => 'apr_read_type_e'
      }
    ],
    'name' => 'modperl_bucket_read'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      },
      {
        'name' => 'buffer',
        'type' => 'SV *'
      },
      {
        'name' => 'block',
        'type' => 'apr_read_type_e'
      }
    ],
    'name' => 'mpxs_modperl_bucket_read'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Bucket_is_eos'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'a',
        'type' => 'apr_bucket *'
      },
      {
        'name' => 'b',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Bucket_insert_before'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'a',
        'type' => 'apr_bucket *'
      },
      {
        'name' => 'b',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Bucket_insert_after'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Bucket_remove'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'socket',
        'type' => 'apr_socket_t *'
      },
      {
        'name' => 'sv_buf',
        'type' => 'SV *'
      },
      {
        'name' => 'sv_len',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_recv'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'socket',
        'type' => 'apr_socket_t *'
      },
      {
        'name' => 'sv_buf',
        'type' => 'SV *'
      },
      {
        'name' => 'sv_len',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_send'
  },
  {
    'return_type' => 'apr_ipsubnet_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'classname',
        'type' => 'SV *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'ipstr',
        'type' => 'const char *'
      },
      {
        'name' => 'mask_or_numbits',
        'type' => 'const char *'
      }
    ],
    'name' => 'mpxs_apr_ipsubnet_create'
  },
  {
    'return_type' => 'apr_bucket_brigade *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'CLASS',
        'type' => 'SV *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'mpxs_apr_brigade_create'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_first'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_last'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_next'
  },
  {
    'return_type' => 'apr_bucket *',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_prev'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_insert_tail'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'bucket',
        'type' => 'apr_bucket *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_insert_head'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'a',
        'type' => 'apr_bucket_brigade *'
      },
      {
        'name' => 'b',
        'type' => 'apr_bucket_brigade *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_concat'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'brigade',
        'type' => 'apr_bucket_brigade *'
      }
    ],
    'name' => 'mpxs_APR__Brigade_empty'
  },
  {
    'return_type' => 'apr_uuid_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'CLASS',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_uuid_get'
  },
  {
    'return_type' => 'apr_uuid_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'CLASS',
        'type' => 'SV *'
      },
      {
        'name' => 'buf',
        'type' => 'char *'
      }
    ],
    'name' => 'mpxs_apr_uuid_parse'
  },
  {
    'return_type' => 'apr_pool_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'obj',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_pool_create'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'data',
        'type' => 'void *'
      }
    ],
    'name' => 'mpxs_cleanup_run'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'cv',
        'type' => 'SV *'
      },
      {
        'name' => 'arg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_pool_cleanup_register'
  },
  {
    'return_type' => 'apr_lock_t *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'CLASS',
        'type' => 'SV *'
      },
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      },
      {
        'name' => 'type',
        'type' => 'apr_locktype_e'
      },
      {
        'name' => 'scope',
        'type' => 'apr_lockscope_e'
      },
      {
        'name' => 'fname',
        'type' => 'const char *'
      }
    ],
    'name' => 'mpxs_apr_lock_create'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'arg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_strerror'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'arg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_generate_random_bytes'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'arg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_base64_encode'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'arg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_apr_base64_decode'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      }
    ],
    'name' => 'mpxs_Apache__Log_BOOT'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'level',
        'type' => 'int'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'msg',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_ap_log_error'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      },
      {
        'name' => 'logtype',
        'type' => 'int'
      }
    ],
    'name' => 'mpxs_Apache__Log_log'
  },
  {
    'return_type' => 'modperl_uri_t *',
    'args' => [
      {
        'name' => 'p',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'mpxs_uri_new'
  },
  {
    'return_type' => 'uri_components *',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_parsed_uri'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'uptr',
        'type' => 'uri_components *'
      },
      {
        'name' => 'flags',
        'type' => 'unsigned'
      }
    ],
    'name' => 'mpxs_ap_unparse_uri_components'
  },
  {
    'return_type' => 'uri_components *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'classname',
        'type' => 'SV *'
      },
      {
        'name' => 'obj',
        'type' => 'SV *'
      },
      {
        'name' => 'uri_string',
        'type' => 'const char *'
      }
    ],
    'name' => 'mpxs_ap_parse_uri_components'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'url',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_ap_unescape_url'
  },
  {
    'return_type' => 'char *',
    'args' => [
      {
        'name' => 'uri',
        'type' => 'uri_components *'
      },
      {
        'name' => 'portsv',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache__URI_port'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      }
    ],
    'name' => 'mpxs_ap_requires'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'items',
        'type' => 'I32'
      },
      {
        'name' => 'mark',
        'type' => 'SV **'
      },
      {
        'name' => 'sp',
        'type' => 'SV **'
      }
    ],
    'name' => 'mpxs_ap_allow_methods'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_push_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_set_handlers'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_get_handlers'
  },
  {
    'return_type' => 'request_rec *',
    'args' => [
      {
        'name' => 'classname',
        'type' => 'SV *'
      },
      {
        'name' => 'c',
        'type' => 'conn_rec *'
      },
      {
        'name' => 'base_pool',
        'type' => 'apr_pool_t *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_new'
  },
  {
    'return_type' => 'request_rec *',
    'args' => [
      {
        'name' => 'classname',
        'type' => 'SV *'
      },
      {
        'name' => 'svr',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache_request'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'location',
        'type' => 'char *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_location_merge'
  },
  {
    'return_type' => 'void',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'username',
        'type' => 'char *'
      },
      {
        'name' => 'password',
        'type' => 'char *'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_set_basic_credentials'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache__Server_push_handlers'
  },
  {
    'return_type' => 'int',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      },
      {
        'name' => 'sv',
        'type' => 'SV *'
      }
    ],
    'name' => 'mpxs_Apache__Server_set_handlers'
  },
  {
    'return_type' => 'SV *',
    'args' => [
      {
        'name' => 's',
        'type' => 'server_rec *'
      },
      {
        'name' => 'name',
        'type' => 'const char *'
      }
    ],
    'name' => 'mpxs_Apache__Server_get_handlers'
  },
  {
    'return_type' => 'apr_size_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'items',
        'type' => 'I32'
      },
      {
        'name' => 'mark',
        'type' => 'SV **'
      },
      {
        'name' => 'sp',
        'type' => 'SV **'
      }
    ],
    'name' => 'mpxs_Apache__Filter_print'
  },
  {
    'return_type' => 'apr_size_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'items',
        'type' => 'I32'
      },
      {
        'name' => 'mark',
        'type' => 'SV **'
      },
      {
        'name' => 'sp',
        'type' => 'SV **'
      }
    ],
    'name' => 'mpxs_Apache__Filter_read'
  },
  {
    'return_type' => 'U32 *',
    'args' => [
      {
        'name' => 'package',
        'type' => 'SV *'
      },
      {
        'name' => 'cvrv',
        'type' => 'SV *'
      }
    ],
    'name' => 'modperl_filter_attributes'
  },
  {
    'return_type' => 'apr_size_t',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'items',
        'type' => 'I32'
      },
      {
        'name' => 'mark',
        'type' => 'SV **'
      },
      {
        'name' => 'sp',
        'type' => 'SV **'
      }
    ],
    'name' => 'mpxs_ap_rvputs'
  },
  {
    'return_type' => 'long',
    'args' => [
      {
        'name' => 'my_perl',
        'type' => 'PerlInterpreter *'
      },
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'buffer',
        'type' => 'SV *'
      },
      {
        'name' => 'bufsiz',
        'type' => 'int'
      }
    ],
    'name' => 'mpxs_ap_get_client_block'
  },
  {
    'return_type' => 'apr_status_t',
    'args' => [
      {
        'name' => 'r',
        'type' => 'request_rec *'
      },
      {
        'name' => 'filename',
        'type' => 'const char *'
      },
      {
        'name' => 'offset',
        'type' => 'apr_off_t'
      },
      {
        'name' => 'len',
        'type' => 'apr_size_t'
      }
    ],
    'name' => 'mpxs_Apache__RequestRec_sendfile'
  }
];


1;
