This file provides the status of the supported API, via the
API documentation files.

col1 legend
-----------
-: not started/unknown
+: in process
V: done (for 2.0 release)

col2 legend
-----------
-: not started/unknown
P: post 2.0 (has API to be polished after 2.0 release)
V: done completely

- the file path is relative to the modperl-docs cvs repository
#########################################################
-- src/docs/2.0/api/Apache.pod
-- src/docs/2.0/api/Apache/Access.pod
-- src/docs/2.0/api/Apache/CmdParms.pod
-- src/docs/2.0/api/Apache/Command.pod
-- src/docs/2.0/api/Apache/Connection.pod
+- src/docs/2.0/api/Apache/Const.pod
-- src/docs/2.0/api/Apache/Directive.pod
VP src/docs/2.0/api/Apache/Filter.pod
        The whole TIE interface   
VV src/docs/2.0/api/Apache/FilterRec.pod
-- src/docs/2.0/api/Apache/HookRun.pod
+- src/docs/2.0/api/Apache/Log.pod
        log_pid
-- src/docs/2.0/api/Apache/Module.pod
-- src/docs/2.0/api/Apache/PerlSections.pod
-- src/docs/2.0/api/Apache/Process.pod
-- src/docs/2.0/api/Apache/Reload.pod
VV src/docs/2.0/api/Apache/RequestIO.pod
-- src/docs/2.0/api/Apache/RequestRec.pod
-- src/docs/2.0/api/Apache/RequestUtil.pod
-- src/docs/2.0/api/Apache/Response.pod
-- src/docs/2.0/api/Apache/Server.pod
-- src/docs/2.0/api/Apache/ServerUtil.pod
-- src/docs/2.0/api/Apache/Status.pod
-- src/docs/2.0/api/Apache/SubProcess.pod
-- src/docs/2.0/api/Apache/SubRequest.pod
-- src/docs/2.0/api/Apache/URI.pod
-- src/docs/2.0/api/Apache/Util.pod
-- src/docs/2.0/api/Apache/compat.pod
-- src/docs/2.0/api/Apache/porting.pod

-- src/docs/2.0/api/ModPerl/BuildMM.pod
++ src/docs/2.0/api/ModPerl/Const.pod
VV src/docs/2.0/api/ModPerl/Global.pod
-- src/docs/2.0/api/ModPerl/MM.pod
VV src/docs/2.0/api/ModPerl/MethodLookup.pod
-- src/docs/2.0/api/ModPerl/PerlRun.pod
-- src/docs/2.0/api/ModPerl/Registry.pod
-- src/docs/2.0/api/ModPerl/RegistryBB.pod
-- src/docs/2.0/api/ModPerl/RegistryCooker.pod
-- src/docs/2.0/api/ModPerl/RegistryLoader.pod
-- src/docs/2.0/api/ModPerl/Util.pod

-- src/docs/2.0/api/APR.pod
VV src/docs/2.0/api/APR/Base64.pod
VV src/docs/2.0/api/APR/Brigade.pod
VP src/docs/2.0/api/APR/Bucket.pod
        data
        start
VV src/docs/2.0/api/APR/BucketAlloc.pod
VV src/docs/2.0/api/APR/BucketType.pod
+- src/docs/2.0/api/APR/Const.pod
VV src/docs/2.0/api/APR/Date.pod
VV src/docs/2.0/api/APR/Error.pod
-- src/docs/2.0/api/APR/Finfo.pod
VV src/docs/2.0/api/APR/IpSubnet.pod
+V src/docs/2.0/api/APR/PerlIO.pod
        (convert to use exceptions)
VP src/docs/2.0/api/APR/Pool.pod
        cleanup_for_exec
        (clean has some win32 problems)
VP src/docs/2.0/api/APR/SockAddr.pod
        equal
VP src/docs/2.0/api/APR/Socket.pod
        bind
        close
        connect
        listen
        recvfrom
        sendto
VV src/docs/2.0/api/APR/Table.pod
VP src/docs/2.0/api/APR/ThreadMutex.pod
        DESTROY
        lock
        new
        pool_get
        trylock
        unlock
VV src/docs/2.0/api/APR/URI.pod
VP src/docs/2.0/api/APR/Util.pod
        filepath_name_get
        password_get


################################
### Other API related things ###
################################

Q: APR::BucketAlloc object returned by $r->connection->bucket_alloc
   doesn't have a real package. It's OK for now, but when used outside
   httpd, where that allocation should come from?

A: Add glue for function: apr_bucket_alloc_create(pool);
   not urgent for 2.0
